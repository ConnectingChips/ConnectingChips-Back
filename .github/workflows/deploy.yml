name: Deploy to Amazon EC2

on:
  pull_request:
    branches:
      - dev

env:
  AWS_REGION: ${{ AWS_REGION }}
  AWS_S3_BUCKET: ${{ AWS_S3_BUCKET }}
  AWS_CODE_DEPLOY_APPLICATION: ${{ AWS_CODE_DEPLOY_APPLICATION }}
  AWS_CODE_DEPLOY_GROUP: ${{ AWS_CODE_DEPLOY_GROUP }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # (3) Gradlew에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # (4) 프로젝트 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # (5) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (6) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
            --ignore-hidden-files \
            --s3-location s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip \
            --source .

      # (7) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} \
            --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip